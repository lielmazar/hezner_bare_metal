- name: install_encrypted_ubuntu_from_rescue
  hosts: myhosts
  gather_facts: false
  vars_prompt:
    - name: luks_passphrase
      prompt: "Enter LUKS disk encryption passphrase"
      private: true

  vars:
    local_public_key: "{{ lookup('env','HOME') }}/.ssh/id_ed25519.pub"
    local_private_key: "{{ lookup('env','HOME') }}/.ssh/id_ed25519"
    dropbear_port: 22

  pre_tasks:
    - name: Remove old SSH key for sv1.cservices.co.il
      delegate_to: localhost
      shell: ssh-keygen -R sv1.cservices.co.il
      register: ssh_keygen_result
      changed_when: "'updated' in ssh_keygen_result.stdout"

    - name: Accept and store SSH host key permanently
      delegate_to: localhost
      shell: |
        ssh -o StrictHostKeyChecking=no \
            -o UserKnownHostsFile=~/.ssh/known_hosts \
            -p {{ dropbear_port | default(22) }} \
            root@{{ inventory_hostname }} "echo SSH key accepted"
      register: ssh_key_accept
      changed_when: false
      failed_when: false

  tasks:
    - name: Gather facts manually after cleanup
      setup:
    
    - name: Stop RAID and wipe disks
      shell: |
        mdadm --stop /dev/md/* 2>/dev/null || true
        wipefs -fa /dev/nvme*n1

    - name: Upload SSH public key
      copy:
        src: "{{ local_public_key }}"
        dest: /tmp/authorized_keys
        mode: '0644'

    - name: Upload setup.conf
      template:
        src: setup.conf.j2
        dest: /tmp/setup.conf
        mode: '0644'

    - name: Upload post-install script
      copy:
        src: "{{ playbook_dir }}/files/post-install.sh"
        dest: /tmp/post-install.sh
        mode: '0755'

    - name: Run installimage
      shell: |
        export TERM=xterm
        git clone --single-branch --branch security-fix-1 https://github.com/lielmazar/installimage.git
        /root/installimage/installimage -a -c /tmp/setup.conf -x /tmp/post-install.sh
      args:
        chdir: /root

    - name: Manually reboot system
      shell: reboot
      async: 1
      poll: 0
      ignore_errors: true  # since the SSH connection will drop
      register: reboot_result

    - name: Wait for dropbear SSH
      delegate_to: localhost
      wait_for:
        host: "{{ inventory_hostname }}"
        port: "{{ dropbear_port }}"
        timeout: 300
        state: started

    - name: Unlock encrypted disk
      delegate_to: localhost
      expect:
        command: >
          ssh -o StrictHostKeyChecking=no
              -o UserKnownHostsFile=/dev/null
              -p {{ dropbear_port }}
              -tt root@{{ inventory_hostname }} cryptroot-unlock
        responses:
          '.*unlock.*disk.*:': "{{ luks_passphrase }}"
      register: unlock_result
      failed_when: false   # Dropbear closes the connection after unlocking
      no_log: false        # Prevent logging sensitive information

    - name: Remove old SSH key for sv1.cservices.co.il
      delegate_to: localhost
      shell: ssh-keygen -R sv1.cservices.co.il
      register: ssh_keygen_result
      changed_when: "'updated' in ssh_keygen_result.stdout"

    - name: Wait for SSH
      wait_for:
        host: "{{ inventory_hostname }}"
        port: 22
        timeout: 300
        state: started
      delegate_to: localhost

    - name: Accept and store SSH host key permanently
      delegate_to: localhost
      shell: |
        ssh -o StrictHostKeyChecking=no \
            -o UserKnownHostsFile=~/.ssh/known_hosts \
            -p {{ dropbear_port | default(22) }} \
            root@{{ inventory_hostname }} "echo SSH key accepted"
      register: ssh_key_accept
      changed_when: false
      failed_when: false

    - name: Upgrade system packages
      apt:
        update_cache: yes
        upgrade: dist

    - name: Install unattended-upgrades
      apt:
        name: unattended-upgrades
        state: present

    - name: Remove installimage artifacts
      file:
        path: "{{ item }}"
        state: absent
      loop:
        - /installimage.conf
        - /installimage.debug
