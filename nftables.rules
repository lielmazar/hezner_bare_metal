#!/sbin/nft -f

# This nftables.rules config should be saved as /etc/nftables.rules

flush ruleset

# Defining rules
table inet filter {
    # Base chain for input (Filters inbound network packets)
    chain input {
        type filter hook input priority 0; policy drop;

        # Ensure loopback traffic is configured
        iif "lo" accept

        # Ensure no one impersonating local host
        ip saddr 127.0.0.0/8 counter drop
        ip6 saddr ::1 counter drop

        # Ensure established connections are configured
        ct state established,related accept

        # Accept port 22(SSH) traffic from anywhere
        tcp dport 22 accept
      
        # Kubernetes Control Plane ports
        tcp dport 6443 accept                    # Kubernetes API server
        tcp dport 2379-2380 accept               # etcd server client API
        tcp dport 10250 accept                   # Kubelet API
        tcp dport 10259 accept                   # kube-scheduler
        tcp dport 10257 accept                   # kube-controller-manager
        
        # Kubernetes Worker Node ports
        tcp dport 10256 accept                   # kube-proxy
        tcp dport 30000-32767 accept             # NodePort Services (TCP)
        udp dport 30000-32767 accept             # NodePort Services (UDP)
        
        # Allow ping
        icmp type { echo-request, echo-reply } counter accept
        icmpv6 type { echo-request, echo-reply } counter accept
    }

    # Base chain for forward (Filters forwarded network packets)
    chain forward {
        type filter hook forward priority 0; policy drop;
    }

    # Base chain for output (Filters outbound network packets)
    chain output {
        type filter hook output priority 0; policy accept;

        # Allow DNS
        tcp dport 53 accept
        udp dport 53 accept

        # Allow ICMP
        ip protocol icmp accept
        ip6 nexthdr icmpv6 accept

        # Allow already-established connections
        ct state established,related accept

        # Allow https/http connections
        tcp dport { 80, 443 } accept
    }
}